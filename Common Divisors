#include<bits/stdc++.h>

using namespace std;

#define debug(x) cout << '[' << #x << " is: " << x << "] " << endl;
#define imod(a , n) (a % n + n ) % n

#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define inF freopen("ladder.in","r",stdin );
#define outF freopen("ladder.out" , "w" , stdout ) ;
#define sor(v) sort(v.begin() , v.end());
#define print(v) for(auto f : v ) cout << f << " " ;
#define rsor(v) sort(v.rbegin() , v.rend());
#define rev(v) reverse(v.begin() , v.end());
#define scan(v) for(auto &it : v)cin >> it ;

#define logar(x , y) log(x) / log(y)
#define __sum(n) n * (n + 1) / 2
#define __lcm(a , b) a / __gcd(a , b) * b
#define pii pair<int , int >
#define ll  long long
//#define int ll
#define matrix vector<vector<ll>>
#define pii pair<int , int >
const int N = 1e6 + 5 , M = N * 4;
const double eps = 1e-18 ;

bool isdivisor(string d , string a){

    string s = "" ;

    while(s.size() < a.size())s += d ;

    return s == a ;


}

int32_t main()

{

    fastio;

    string a , b ;
    int n , m ;
    cin >> a >> b ;


    n = a.size() , m = b.size() ;

    int gcd = __gcd(n , m);

    int ans = 0 ;
    for(int i = 1 ; i * i <= gcd ; i ++){
        if(gcd % i == 0){
            if(isdivisor(a.substr(0 , i) , a) && isdivisor(a.substr(0 , i) , b))ans ++ ;
            if(i * i == gcd)break;
            int d = gcd / i ;

            if(isdivisor(a.substr(0 , d) , a) && isdivisor(a.substr(0 , d) , b))ans ++ ;

        }
    }

    cout << ans ;


}
