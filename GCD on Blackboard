#include<bits/stdc++.h>

using namespace std;

#define debug(x) cout << '[' << #x << " is: " << x << "] " << endl;
#define imod(a , n) (a % n + n ) % n

#define fastio ios_base::sync_with_stdio(false);cin.tie(0);
#define inF freopen("ladder.in","r",stdin );
#define outF freopen("ladder.out" , "w" , stdout ) ;
#define sor(v) sort(v.begin() , v.end());
//#define print(v) for(auto f : v ) cout << f << " " ;
#define rsor(v) sort(v.rbegin() , v.rend());
#define rev(v) reverse(v.begin() , v.end());
#define scan(v) for(auto &it : v)cin >> it ;

#define logar(x , y) log(x) / log(y)
#define __sum(n) n * (n + 1) / 2
#define __lcm(a , b) a / __gcd(a , b) * b
#define pii pair<int , int >
#define ll  long long

#define matrix vector<vector<ll>>
#define pii pair<int , int >
const int N = 1e5 + 10 , M = N * 4;
const int mod = 1e9 + 7 ;



int32_t main()

{
    fastio ;


    int n ;
    cin >> n
    ;
    vector<int> v(n);
    for(auto &it : v)cin >> it ;

    int mx = 0 ;

    int gcd[n] , rgcd[n];
    int g = 0 ;
    for(int i = 0 ; i < n ; i ++){
        g = __gcd(g , v[i]);
        gcd[i] = g ;
    }
    g = 0 ;

    for(int i = n - 1 ; i >=0 ; i --){
        g = __gcd(g , v[i]);
        rgcd[i] = g ;

    }

    for(int i = 0 ; i < n ; i ++){
        g = 0 ;
        if(i)g = gcd[i - 1] ;
        if(i != n - 1)g = __gcd(g , rgcd[i + 1]);
        mx = max(mx , g);

    }
    cout << mx ;
}
