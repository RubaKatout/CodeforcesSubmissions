#include <bits/stdc++.h>
using namespace std;
vector<vector<int>>adj;
vector<bool>vis;
vector<int>level;
void bfs(){
    vis[1]=true;
    queue<int>q;
    q.push(1);
    while(!q.empty()){//cout<<"in loop";
        int f=q.front();
        q.pop();
        for(auto ff:adj[f]){
            if(!vis[ff]){
                vis[ff]=true;
                level[ff]=level[f]+1;
                q.push(ff);
            }
        }
    }
 
 
 
}
int main(){
    int t,n,m,ui,vi;
    cin>>t;
    while (t--){
 
 
        cin>>n>>m;
        adj=vector<vector<int>>(n+1);
        level=vector<int>(n+1,0);
        vis=vector<bool>(n+1,false);
        while (m--){
            cin>>ui>>vi;
            adj[ui].push_back(vi),adj[vi].push_back(ui);
        }
        bfs();
 
        vector<int>odd,even;
    for(int x=1;x<=n;x++){
        if(level[x]&1)odd.push_back(x);
        else even.push_back(x);
    }
    if(odd.size()<even.size()){
        cout<<odd.size()<<endl;
        for(auto f:odd)cout<<f<<" ";
 
    }
    else {
        cout<<even.size()<<endl;
        for(auto f:even)cout<<f<<" ";
    }
    cout<<endl;
 
 
 
    }
 
 
 
   return 0;
}
