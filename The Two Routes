#include<bits/stdc++.h>
using namespace std;
 
int n , m ;
vector<vector<int>>adj(4e2 + 4) , adj2(2e4 + 4 );
vector<vector<bool>>e (4e2 + 4 , vector<bool>(2e4 + 4 , false));
vector<int>level(4e2 + 4 , 0);
vector<bool>vis(4e2 + 4 , false);
void bfs(vector<vector<int>>a){
    vis[1] = true;
    queue<int>q;
    q.push(1);
    while (!q.empty()){
        int f = q.front() ;
        q.pop() ;
        for(auto it : a[f]){
            if(!vis[it]){
                vis[it] = true ;
                q.push(it) ;
                level[it] = level[f] + 1 ;
            }
        }
    }
 
 
 
}
 
int32_t main(){
 
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
    cin >> n >>  m ;
    while (m--){
        int a , s ;
        cin >> a >> s ;
        adj[a].push_back(s) , adj[s].push_back(a);
        e[a][s] = true ;
        e[s][a] = true ;
    }
    for(int i = 1 ; i <= n ; i ++ ){
        for(int j = i + 1 ; j <= n ; j ++){
            if(!e[i][j])
                adj2[i].push_back(j) , adj2[j].push_back(i);
        }
    }
    if(e[1][n])
        bfs(adj2);
    else
        bfs(adj);
    cout << (level[n] ? level[n] : -1) ;
 
 
 
 
 
    return 0;
}
